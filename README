------------------------------
Content of this file 
------------------------------
1) What's this
2) How to use
3) Bug reporting
4) License information
------------------------------

1)     WHAT'S THIS
==============================
The Concentric Interpolation method efficiently interpolates scalar data
in multi-dimensional spaces. It is based on a concentric placement of the
function samples, i.e. centered around the origin and placed along
equidistributed directions at certain radii. This structure is exploited by
means of a two-staged interpolation: first, a radial interpolation is performed, 
i.e. a one-dimensional interpolation along each direction by means of piecewise
defined polynomial. Second, a tangential interpolation is performed using
classical spherical basis functions. For more information, see the associated
research article:

Authors: Oliver Kunc and Felix Fritzen
Title  : Generation of energy-minimizing point sets on spheres and their
         application in mesh-free interpolation and differentiation
Journal: ...
Year   : ...
Volume : ...
Number : ...
DOI    : ...
URL    : ...

2)     HOW TO USE
==============================
2.1)   REQUIREMENTS
==============================
       A C++ compiler (e.g. g++) and the GNU GSL library as well as an
       implementation of LAPACKE are required. (in Debian or Ubuntu systems, the
       command "sudo apt-get install liblapacke liblapacke-dev libgsl-dev 
       libgsl23 libgslcblas0" should suffice)

2.2)   DOCUMENTATION
==============================
       See doxygen output in ./doxygen/html/index.html
       or in ./doxygen/latex/*.pdf for class documentation
       (build using command: doxygen ConcentricInterpolation.doxy).
       See inline comments for further details.

2.3)   COMPILATION and EXAMPLE
==============================
2.3a)  For the LIBRARY, go to the "src" directory and run "make" on a terminal
       (adjust Makefile if required)
2.3b)  For an executable EXAMPLE, change to the "examples" directory. Run "make"
       on a terminal. Then change to "examples" directory, where the binary
       "interpolation demo" is located. To see which arguments need to be
       passed, run it without arguments. To run it with an exemplary set of
       arguments, run the shell script "run_example_interpolation_demo.sh". The
       outputs are written to the file "outputs_interpolation_demo.txt".
       
       You can provide your own function data by providing directions and values
       as text files in the format of the arguments in
       "run_example_interpolation_demo.sh".
       
       The best point to start getting into the code is "interpolation_demo.cxx"

2.4)   HOW TO CITE
==============================
When referring to this software, please cite the article mentioned above in
Section 1) "WHAT'S THIS".


3) BUG REPORTING
==============================
Please report bugs and suggestions to the administrators of the corresponding
github repository:
        https://github.com/EMMA-Group/ConcentricInterpolation
or direcly e-mail
        fritzen@mechbau.uni-stuttgart.de
or
        kunc@mechbau.uni-stuttgart.de

4) LICENSE INFORMATION
==============================
See file LICENSE
